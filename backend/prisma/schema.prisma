generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  name      String
  age       Int?
  city      String?
  password  String
  avatar    String?
  address   String?
  phone     String?
  role      String?    @default("user")
  createdAt DateTime   @default(now())
  order     Order[]
  review    Review[]
  tokenPair TokenPair?
}

model Restaurant {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  dish      Dish[]
  order     Order[]
  review    Review[]
}

model Order {
  id           Int         @id @default(autoincrement())
  userId       Int
  restaurantId Int?
  createdAt    DateTime    @default(now())
  dish         Int[]
  totalPrice   Int
  restaurant   Restaurant? @relation(fields: [restaurantId], references: [id])
  user         User        @relation(fields: [userId], references: [id])
}

model Dish {
  id            Int           @id @default(autoincrement())
  name          String
  price         Int
  weight        Int?
  description   String
  quantity_sold Int?          @default(0)
  localityId    Int
  restaurantId  Int?
  image         String?
  createdAt     DateTime      @default(now())
  locality      Locality      @relation(fields: [localityId], references: [id])
  Restaurant    Restaurant?   @relation(fields: [restaurantId], references: [id])
  ingredients   Ingredients[]
}

model Locality {
  id        Int      @id @default(autoincrement())
  name      String
  image     String?
  createdAt DateTime @default(now())
  Dish      Dish[]
}

model Ingredients {
  id     Int    @id @default(autoincrement())
  name   String
  dishId Int?
  dish   Dish?  @relation(fields: [dishId], references: [id])
}

model Review {
  id           Int         @id @default(autoincrement())
  body         String
  rating       Int?
  userId       Int?
  restaurantId Int?
  createdAt    DateTime    @default(now())
  restaurant   Restaurant? @relation(fields: [restaurantId], references: [id])
  user         User?       @relation(fields: [userId], references: [id])
}

model TokenPair {
  id           Int    @id @default(autoincrement())
  accessToken  String
  refreshToken String
  authorId     Int?   @unique
  author       User?  @relation(fields: [authorId], references: [id])
}
